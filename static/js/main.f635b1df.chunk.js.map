{"version":3,"sources":["components/MyNavbar.js","components/Chart.js","components/Myfft.js","components/FFTSimulator.js","components/Home.js","components/About.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","react_default","a","createElement","className","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","eventKey","Component","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","noisyChartData","es","data","width","height","options","maintainAspectRatio","scales","xAxes","display","fft","require","ifft","Myfft","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","psdData","filtData","isClicked","inherits","createClass","key","value","phasors","Y","console","log","PSD","indices","i","Math","pow","filtered","Y_M","freq","setState","labels","slice","datasets","label","backgroundColor","_this2","Button","onClick","showGraph","FFTSimulator","getChartData","min","max","skew","u","v","random","num","sqrt","cos","PI","randn_bm","t","wave","noisySignal","sin","Container","components_Chart","src_components_Myfft","Home","Jumbotron","react_router_dom","to","Col","Image","src","Table","striped","bordered","hover","responsive","frameborder","allow","allowfullscreen","About","xs","sm","smoffset","roundedCircle","Projects","App","MyNavbar_MyNavbar","react_router","exact","path","process","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f635b1df.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\nimport \"./MyNavbar.css\";\nexport default class MyNavbar extends Component {\n  render() {\n    return (\n\n    <div className=\"homepagenavbar\">\n           <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">ComicalFourier</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n          </Nav>\n          <Nav>\n            <Nav.Link eventKey={1} href=\"/\">Home</Nav.Link>\n            <Nav.Link eventKey={1} href=\"/projects\">Projects</Nav.Link>\n            <Nav.Link eventKey={2} href=\"/about\">About</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: props.chartData,\n      noisyChartData: props.noisyChartData\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"chart\">\n        <div className=\"chart-1\">\n          <Line\n            data={this.state.chartData}\n            width={100}\n            height={150}\n            options={{\n              maintainAspectRatio: false,\n              scales: {\n                xAxes: [\n                  {\n                    display: false //this will remove all the x-axis grid lines\n                  }\n                ]\n              }\n            }}\n          />\n        </div>\n        <div className=\"chart-2\">\n          <Line\n            data={this.state.noisyChartData}\n            width={100}\n            height={150}\n            options={{\n              maintainAspectRatio: false,\n              scales: {\n                xAxes: [\n                  {\n                    display: false //this will remove all the x-axis grid lines\n                  }\n                ]\n              }\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Button } from \"react-bootstrap\";\nimport \"./Myfft.css\"\nvar fft = require(\"fft-js\").fft;\nvar ifft = require(\"fft-js\").ifft;\n\nexport class Myfft extends Component {\n  state = {\n    psdData: {},\n    filtData: {},\n    isClicked: false\n  };\n\n  showGraph() {\n\n    var phasors = fft(this.props.Y);\n    console.log(this.state.isClicked);\n\n    let PSD = [];\n    let indices = [];\n    for (let i = 0; i < 1024; ++i) {\n      PSD[i] = (Math.pow(phasors[i][0], 2) + Math.pow(phasors[i][1], 2)) / 1000;\n\n      if (PSD[i] >= 140) {\n        indices[i] = 1;\n      } else indices[i] = 0;\n    }\n\n    for (let i = 0; i < 1024; ++i) {\n\n      phasors[i][0] = indices[i] * phasors[i][0];\n      phasors[i][1] = indices[i] * phasors[i][1];\n    }\n\n    var filtered = ifft(phasors);\n\n    var Y_M = [];\n    var freq = [];\n\n\n    for (let i = 0; i < 1024; ++i) {\n      Y_M[i] = filtered[i][0];\n      freq[i] = i;\n    }\n\n    this.setState({\n      isClicked: true,\n      psdData: {\n        labels: freq.slice(0, 512),\n        datasets: [\n          {\n            label: \"Power spectrum density (PSD)\",\n            data: PSD.slice(0, 512),\n            backgroundColor: [\"rgba(91, 44, 111, 0.6)\"]\n          }\n        ]\n      },\n      filtData: {\n        labels: freq.slice(0, 100),\n        datasets: [\n          {\n            label: \"Filtered Signal\",\n            data: Y_M.slice(0, 100),\n            backgroundColor: [\"rgba(241, 196, 15, 0.6)\"]\n          }\n        ]\n      },\n\n    });\n  }\n\n  render() {\n\n    if(this.state.isClicked){\n      return (\n        <div>\n          <div className=\"performbutton\">\n          <Button variant=\"primary\" onClick={() => this.showGraph()}>Perform FFT</Button>\n          </div>\n          <div className=\"psd\">\n            <Line\n              data={this.state.psdData}\n              width={100}\n              height={150}\n              options={{\n                maintainAspectRatio: false,\n                scales: {\n                  xAxes: [\n                    {\n                      display: false //this will remove all the x-axis grid lines\n                    }\n                  ]\n                }\n              }}\n            />\n          </div>\n  \n          <div className=\"filt\">\n            <Line\n              data={this.state.filtData}\n              width={100}\n              height={150}\n              options={{\n                maintainAspectRatio: false,\n                scales: {\n                  xAxes: [\n                    {\n                      display: false //this will remove all the x-axis grid lines\n                    }\n                  ]\n                }\n              }}\n            />\n          </div>\n        </div>\n      );\n    }\n    else{\n      return(\n        <div className=\"performbutton\">\n           <Button variant=\"primary\" onClick={() => this.showGraph()}>Perform FFT</Button>\n        </div> \n      );\n    }\n  }\n}\n\nexport default Myfft;\n","import React, { Component } from \"react\";\nimport Chart from \"./Chart\";\nimport Myfft from \"./Myfft\";\nimport { Container } from \"react-bootstrap\";\n\nexport default class FFTSimulator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      chartData: {},\n      noisyChartData: {},\n      Y: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n    // console.log('Component mounting');\n  }\n\n  randn_bm(min, max, skew) {\n    var u = 0,\n      v = 0;\n    while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n    while (v === 0) v = Math.random();\n    let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\n    if (num > 1 || num < 0) num = this.randn_bm(min, max, skew); // resample between 0 and 1 if out of range\n    num = Math.pow(num, skew); // Skew\n    num *= max - min; // Stretch to fill range\n    num += min; // offset to min\n    return num;\n  }\n\n  getChartData() {\n    //ajax call here\n\n    let dt = 0.001;\n    let t = [];\n    t[0] = 0;\n    let wave = [];\n    let pi = 3.1416;\n    let noisySignal = [];\n\n    for (let i = 1; i <= 1024; ++i) {\n      t[i] = t[i - 1] + dt;\n    }\n\n    for (let i = 0; i < 1024; ++i) {\n      wave[i] = Math.sin(2 * pi * 50 * t[i]);\n      noisySignal[i] = wave[i] + 1.5 * this.randn_bm(-10, 10, 1);\n    }\n\n    //console.log(noisySignal.slice(0,10))\n\n    this.setState({\n      chartData: {\n        labels: t.slice(0, 100),\n        datasets: [\n          {\n            label: \"A Simple Sin wave\",\n            data: wave.slice(0, 100),\n            backgroundColor: [\"rgba(34, 153, 84, 0.6)\"]\n          }\n        ]\n      },\n\n      noisyChartData: {\n        labels: t.slice(0, 100),\n        datasets: [\n          {\n            label: \"After Adding Noise\",\n            data: noisySignal.slice(0, 100),\n            backgroundColor: [\"rgba(231, 76, 60, 0.6)\"]\n          }\n        ]\n      },\n      Y: noisySignal\n    });\n  }\n\n  handleClick() {\n    this.setState({\n      isClicked: true\n    });\n    console.log(\"Clicked\");\n  }\n\n  render() {\n    return (\n      <Container>\n        <Chart\n          chartData={this.state.chartData}\n          noisyChartData={this.state.noisyChartData}\n        />\n        <Myfft Y={this.state.Y} />\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FFTSimulator from \"./FFTSimulator\";\nimport \"./Home.css\";\nimport {\n  Jumbotron,\n  Container,\n  Row,\n  Col,\n  Image,\n  Button,\n  ListGroup,\n  Table\n} from \"react-bootstrap\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <Container>\n        <Jumbotron className=\"jumbotron\">\n          <h2>Welcome to Comical Fourier</h2>\n          <p>\n            Comical Fourier is an Web application for Better understanding of\n            Fourier transformation and Fourier Series.\n          </p>\n          <Link to=\"/simulate\">\n            <Button variant=\"primary\">Simulate FFT</Button>\n          </Link>\n        </Jumbotron>\n        <h1>Fourier Transforms</h1>\n        <p>\n          The Fourier transform is important in mathematics, engineering, and\n          the physical sciences. Its discrete counterpart, the Discrete Fourier\n          Transform (DFT), which is normally computed using the so-called Fast\n          Fourier Transform (FFT), has revolutionized modern society, as it is\n          ubiquitous in digital electronics and signal processing. Radio\n          astronomers are particularly avid users of Fourier transforms because\n          Fourier transforms are key components in data processing (e.g.,\n          periodicity searches) and instruments (e.g., antennas, receivers,\n          spectrometers), and they are the cornerstores of interferometry and\n          aperture synthesis.\n        </p>\n        <p>\n          The Fourier transform is a reversible, linear transform with many\n          important properties. For any function f(x) (which in astronomy is\n          usually real-valued, but f(x) may be complex), the Fourier transform\n          can be denoted F(s), where the product of x and s is dimensionless.\n          Often x is a measure of time t (i.e., the time-domain signal) and so s\n          corresponds to inverse time, or frequency (i.e., the frequency-domain\n          signal).{\" \"}\n        </p>\n        <h4>The Fourier transform is defined by</h4>\n        <div className=\"image_div_1\">\n          <Col>\n            <Image src=\"assets/f_01.jpg\"  className=\"images_1\"/>\n          </Col>\n          <Col>\n            <Image src=\"assets/f_01.jpg\"  className=\"images_2\"/>\n          </Col>\n          </div>\n\n        <p>\n          which is the inverse transform. In both cases, i−1 . Alternative\n          definitions of the Fourier transform are based on angular frequency\n          (=2), have different normalizations, or the opposite sign convention\n          in the complex exponential. Since Fourier transformation is\n          reversible, the symmetric symbol is often used to mean \"is the Fourier\n          transform of\"; e.g., F(s)f(x).\n        </p>\n\n        <p>\n          The complex exponential is the heart of the transform. A complex\n          exponential is simply a complex number where both the real and\n          imaginary parts are sinusoids. The exact relation is called Euler's\n          formula\n        </p>\n\n        <div className=\"image_div_2\">\n          <Image src=\"assets/euler_01-1.jpg\"  className=\"images_3\"/>\n        </div>\n\n        <p>\n          which leads to the famous (and beautiful) identity ei+1=0 that relates\n          five of the most important numbers in mathematics. Complex\n          exponentials are much easier to manipulate than trigonometric\n          functions, and they provide a compact notation for dealing with\n          sinusoids of arbitrary phase, which form the basis of the Fourier\n          transform.\n        </p>\n\n        <p>\n          Complex exponentials (or sines and cosines) are periodic functions,\n          and the set of complex exponentials is complete and orthogonal. Thus\n          the Fourier transform can represent any piecewise continuous function\n          and minimizes the least-square error between the function and its\n          representation. There exist other complete and orthogonal sets of\n          periodic functions; for example, Walsh functions (square waves) are\n          useful for digital electronics. Why do we always encounter complex\n          exponentials when solving physical problems? Why are monochromatic\n          waves sinusoidal, and not periodic trains of square waves or\n          triangular waves? The reason is that the derivatives of complex\n          exponentials are just rescaled complex exponentials. In other words,\n          the complex exponentials are the eigenfunctions of the differential\n          operator. Most physical systems obey linear differential equations.\n          Thus an analog electronic filter will convert a sine wave into another\n          sine wave having the same frequency (but not necessarily the same\n          amplitude and phase), while a filtered square wave will not be a\n          square wave. This property of complex exponentials makes the Fourier\n          transform uniquely useful in fields ranging from radio propagation to\n          quantum mechanics.\n        </p>\n\n        <h4>The Discrete Fourier Transform</h4>\n        <p>\n          The continuous Fourier transform converts a time-domain signal of\n          infinite duration into a continuous spectrum composed of an infinite\n          number of sinusoids. In astronomical observations we deal with signals\n          that are discretely sampled, usually at constant intervals, and of\n          finite duration or periodic. For such data, only a finite number of\n          sinusoids is needed and the Discrete Fourier Transform (DFT) is\n          appropriate. For almost every Fourier transform theorem or property,\n          there is a related theorem or property for the DFT. The DFT of N\n          uniformly sampled data points xj (where j=0N−1) and its inverse are\n          defined by\n        </p>\n\n        <div className=\"image_div_1\">\n          <Col>\n            <Image src=\"assets/f_01.jpg\"  className=\"images_1\"/>\n          </Col>\n          <Col>\n            <Image src=\"assets/f_01.jpg\"  className=\"images_2\"/>\n          </Col>\n          </div>\n        <p>\n          Once again, sign and normalization conventions may vary, but our\n          definition is the most common. The continuous variable s has been\n          replaced by the discrete variable (usually an integer) k.\n        </p>\n\n        <p>\n          The result of the DFT of an N-point input time series is an N-point\n          frequency spectrum, with Fourier frequencies k ranging from −(N2−1),\n          through the 0-frequency or so-called \"DC\" component, and up to the\n          highest Fourier frequency N/2. Each bin number represents the integer\n          number of sinusoidal periods present in the time series. The\n          amplitudes and phases represent the amplitudes Ak and phases k of\n          those sinusoids. In summary, each bin can be described by Xk=Akeik .\n        </p>\n\n        <p>\n          For real-valued input data, however, the resulting DFT is\n          hermitian—the real-part of the spectrum is an even function and the\n          imaginary part is odd, such that X−k=Xk, where the bar represents\n          complex conjugation. This means that all of the \"negative\" Fourier\n          frequencies provide no new information. Both the k=0 and k=N/2 bins\n          are real-valued, and there is a total of N/2+1 Fourier bins, so the\n          total number of independent pieces of information (i.e. real and\n          complex parts) is N, just as for the input time series. No information\n          is created or destroyed by the DFT.\n        </p>\n        <p>\n          Other symmetries exist between time- and frequency-domain signals as\n          well:\n        </p>\n\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>Time Domain</th>\n              <th>Frequency Domain</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>real</td>\n              <td>hermitian (real=even, imag=odd)</td>\n            </tr>\n            <tr>\n              <td>imaginary</td>\n              <td>anti-hermitian (real=odd, imag=even)</td>\n            </tr>\n\n            <tr>\n              <td>even</td>\n              <td>even</td>\n            </tr>\n            <tr>\n              <td>odd</td>\n              <td>odd</td>\n            </tr>\n\n            <tr>\n              <td>real and even</td>\n              <td>real and even (i.e. cosine transform)</td>\n            </tr>\n            <tr>\n              <td>real and odd</td>\n              <td>imaginary and odd (i.e. sine transform)</td>\n            </tr>\n\n            <tr>\n              <td>imaginary and even</td>\n              <td>imaginary and even (real=even, imag=odd)</td>\n            </tr>\n            <tr>\n              <td>imaginary and odd</td>\n              <td>real and odd</td>\n            </tr>\n          </tbody>\n        </Table>\n\n        <p>\n          Usually the DFT is computed by a very clever (and truly revolutionary)\n          algorithm known as the Fast Fourier Transform or FFT. The FFT was\n          discovered by Gauss in 1805 and re-discovered many times since, but\n          most people attribute its modern incarnation to James W. Cooley and\n          John W. Tukey (\"An algorithm for the machine calculation of complex\n          Fourier series,\" Math. Comput. 19, 297–301) in 1965. The key advantage\n          of the FFT over the DFT is that the operational complexity decreases\n          from O(N2) for a DFT to O(Nlog2(N)) for the FFT. Modern\n          implementations of the FFT (such as FFTW) allow O(Nlog2(N)) complexity\n          for any value of N, not just those that are powers of two or the\n          products of only small primes.\n        </p>\n\n        <h4>More</h4>\n        <br/>\n        <a href=\"http://www.robots.ox.ac.uk/~sjrob/Teaching/SP/l7.pdf\">1. Descrete Fourier Transformation</a>\n        <br/>\n        <br/>\n        <br/>\n\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/mkGsMWi_j4Q\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen className=\"iframe_1\"></iframe>\n        <br/>\n\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Jumbotron, Container, Row, Col, Image, Button } from \"react-bootstrap\";\nimport \"./About.css\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Col xs={12} sm={8} smoffset={2}>\n            <Image\n              src=\"assets/profile.jpg\"\n              className=\"about-profile-pic\"\n              roundedCircle\n            />\n            <h3>Ashraf Hossain</h3>\n            <p>\n              I am a computer science student, having a Bsc degree in the\n              subject and work for many years in software engineering,\n              Artificial Intelligence, Signal Processing, all of which bring up\n              the recurring theme of the Fourier Transform.\n            </p>\n            <a href=\"https://github.com/ashwoolford\">Github</a>\n          </Col>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap';\n\nexport default class Projects extends Component {\n    render() {\n        return (\n            <Container>\n                <br/>\n                <h3>Projects on FFT</h3>\n                <a href=\"https://colab.research.google.com/drive/1OJ3fZZSu6mHsKNdXep5y5CYzLKr5w136\">1. Sound Wave Filtering Using FFT and iFFT in python</a>\n                <br/>\n                <a href=\"https://drive.matlab.com/sharing/dbbce683-8dc3-4762-900b-47cc0d8032f0\">2. Image Compression using FFT and iFFT in Matlab/Octave</a>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport MyNavbar from \"./components/MyNavbar\";\nimport Home from \"./components/Home\"\nimport About from \"./components/About\"\nimport Projects from \"./components/Projects\"\nimport FFTSimulator from './components/FFTSimulator'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nexport class App extends Component {\n  \n  render() {\n    return (\n      <Router>\n      <div>\n        <MyNavbar />\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={Home} />\n        <Route path=\"/simulate\" component={FFTSimulator}></Route>\n        <Route path=\"/about\" component={About}></Route>\n        <Route path=\"/projects\" component={Projects}></Route>\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}